#!/usr/bin/env python

import math


# 65  64  63  62  61  60  59  58  57
# 66  37  36  35  34  33  32  31  56
# 67  38  17  16  15  14  13  30  55
# 68  39  18   5   4   3  12  29  54
# 69  40  19   6   1   2  11  28  53 = 0:  1,  1 (1 ^ 2)
# 70  41  20   7   8   9  10  27  52 = 1:  2,  9 (3 ^ 2)
# 71  42  21  22  23  24  25  26  51 = 2: 10, 25 (5 ^ 2)
# 72  43  44  45  46  47  48  49  50 = 3: 26, 49 (7 ^ 2)
# 73  74  75  76  77  78  79  80  81 = 4: 50, 81 (9 ^ 2)

#  8   7   6   5   4   5   6   7   8
#  7   6   5   4   3   4   5   6   7
#  6   5   4   3   2   3   4   5   6
#  5   4   3   2   1   2   3   4   5
#  4   3   2   1   0   1   2   3   4
#  5   4   3   2   1   2   3   4   5
#  6   5   4   3   2   3   4   5   6
#  7   6   5   4   3   4   5   6   7
#  8   7   6   5   4   5   6   7   8



# ring: 2
# side: 5
# -------
#  3  2  3  4  3  2  3  4  3  2  3  4  3  2  3  4
#  1  0  1  2  1  0  1  2  1  0  1  2  1  0  1  2
#  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
# 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
#  1  2  3  0  1  2  3  0  1  2  3  0  1  2  3  0

# 0: 2 6 10 14
# 1: 1 3 5 7 9 11 13 15
# 2: 4 8 12 16


# ring: 3
# side: 7
# -------
#  5  4  3  4  5  6  5  4  3  4  5  6  5  4  3  4  5  6  5  4  3  4  5  6
#  2  1  0  1  2  3  2  1  0  1  2  3  2  1  0  1  2  3  2  1  0  1  2  3
#  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
#  1  2  3  4  5  0  1  2  3  4  5  0  1  2  3  4  5  0  1  2  3  4  5  0

# 0 1 2 3 4 5
# 3 2 1 0 1 2

# 0: 3 9 15 21
# 1: 2 4 8 10 14 16 20 22
# 2: 1 5 7 11 13 17 19 23
# 3: 6 12 18 24: (n % 6 == 0)


# Side of ring:
# -------------
# 0 - 1 (2n + 1)
# 1 - 3
# 2 - 5
# 3 - 7
# 4 - 9

# Numbers in ring:
# ----------------
# 0 -  1 (8n)
# 1 -  8 (8 * 1)
# 2 - 16 (8 * 2)
# 3 - 24 (8 * 3)
# 4 - 32 (8 * 4)

# SE line for ring:
# -----------------
# 0 -  1 ((2n + 1) ** 2)
# 1 -  9 (3 ** 2)
# 2 - 25 (5 ** 2)
# 3 - 49 (7 ** 2)
# 4 - 81 (9 ** 2)


def cell(n, b, c):
    return (4 * (n ** 2)) + (b * n) + c

def line(b, c):
    return [cell(n, b, c) for n in range(5)]

def ring(n):
    return int(math.ceil((math.sqrt(n) - 1) / 2.0))

def side(n):
    return (2 * n) + 1

# EE: 1 2 11 28 53 : line(-3, 1)
# NE: 1 3 13 31 57 : line(-2, 1)
# NN: 1 4 15 34 61 : line(-1, 1)
# NW: 1 5 17 37 65 : line( 0, 1)
# WW: 1 6 19 40 69 : line( 1, 1)
# SW: 1 7 21 43 73 : line( 2, 1)
# SS: 1 8 23 46 77 : line( 3, 1)
# SE: 1 9 25 49 81 : line( 4, 1)

# 312051 = 4n^2 + bn + 1
# 312050 = 4n^2 + bn

def run(n):
    if n == 1: return 0
    r = ring(n)
    m = cell(r - 1, 4, 1)
    return r + abs(r - ((n - m) % (r * 2)))


if __name__ == '__main__':
    assert run(1) == 0
    assert run(12) == 3
    assert run(23) == 2
    assert run(24) == 3
    assert run(1024) == 31

    print run(312051)
